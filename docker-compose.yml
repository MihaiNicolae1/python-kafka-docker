version: "3"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    container_name: zookeeper
    networks:
      - broker-kafka
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:6.2.0
    container_name: kafka
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      # KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      # KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      # KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop:3.27.0
    networks:
      - broker-kafka
    depends_on:
      - kafka
      - zookeeper
    ports:
      - "19000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  validate-consumer:
    container_name: validate-consumer
    build:
      context: validate-consumer
      dockerfile: Dockerfile
    environment:
      - KAFKA_VALIDATE_TOPIC_NAME=validate_topic
      - KAFKA_FULFILL_TOPIC_NAME=fulfill_topic
      - KAFKA_SERVER=kafka
      - KAFKA_PORT=29092
    ports:
      - "8001:8001"
    restart: "always"
    depends_on:
      - zookeeper
      - kafka
      - validate-producer
      - mysql
    networks:
      - broker-kafka

  validate-producer:
    container_name: validate-producer
    build:
      context: ./validate-producer
      dockerfile: Dockerfile
    environment:
      - KAFKA_TOPIC_NAME=validate_topic
      - KAFKA_SERVER=kafka
      - KAFKA_PORT=29092
    ports:
      - "8000:8000"
    restart: "always"
    depends_on:
      - zookeeper
      - kafka
      - mysql
    networks:
      - broker-kafka

  fulfill-consumer:
    container_name: fulfill-consumer
    build:
      context: fulfill-consumer
      dockerfile: Dockerfile
    environment:
      - KAFKA_FULFILL_TOPIC_NAME=fulfill_topic
      - KAFKA_SHIPPING_TOPIC_NAME=shipping_topic
      - KAFKA_SERVER=kafka
      - KAFKA_PORT=29092
    restart: "always"
    depends_on:
      - zookeeper
      - kafka
      - validate-consumer
      - mysql
    networks:
      - broker-kafka

  shipping-consumer:
    container_name: shipping-consumer
    build:
      context: shipping-consumer
      dockerfile: Dockerfile
    environment:
      - KAFKA_SHIPPING_TOPIC_NAME=shipping_topic
      - KAFKA_SERVER=kafka
      - KAFKA_PORT=29092
    restart: "always"
    depends_on:
      - zookeeper
      - kafka
      - fulfill-consumer
      - mysql
    networks:
      - broker-kafka

  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: shop
    ports:
      - "3306:3306"
    networks:
      - broker-kafka
    volumes:
      - mysql_data:/var/lib/mysql

networks:
  broker-kafka:
    driver: bridge

volumes:
  mysql_data: